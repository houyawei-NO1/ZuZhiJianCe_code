C251 COMPILER V5.60.0,  main                                                               20/07/23  08:44:43  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE main.c XSMALL INTR2 BROWSE DEBUG

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCMCU.com --------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- QQ:  800003751 -------------------------------------------------*/
   10          /* Èç¹ûÒªÔÚ³ÌĞòÖĞÊ¹ÓÃ´Ë´úÂë,ÇëÔÚ³ÌĞòÖĞ×¢Ã÷Ê¹ÓÃÁËSTCµÄ×ÊÁÏ¼°³ÌĞò            */
   11          /*---------------------------------------------------------------------*/
   12          
   13          /*************  ¹¦ÄÜËµÃ÷        **************
   14          
   15          ±¾Àı³Ì»ùÓÚSTC32GÎªÖ÷¿ØĞ¾Æ¬µÄÊµÑéÏä½øĞĞ±àĞ´²âÊÔ¡£
   16          
   17          Ê¹ÓÃKeil C251±àÒëÆ÷£¬Memory ModelÍÆ¼öÉèÖÃXSmallÄ£Ê½£¬Ä¬ÈÏ¶¨Òå±äÁ¿ÔÚedata£¬µ¥Ê±ÖÓ´æÈ¡·ÃÎÊËÙ¶È¿ì¡£
   18          
   19          edata½¨Òé±£Áô1K¸ø¶ÑÕ»Ê¹ÓÃ£¬¿Õ¼ä²»¹»Ê±¿É½«´óÊı×é¡¢²»³£ÓÃ±äÁ¿¼Óxdata¹Ø¼ü×Ö¶¨Òåµ½xdata¿Õ¼ä¡£
   20          
   21          ÑİÊ¾15Â·ADCºÍbandgap²éÑ¯²ÉÑù£¬´®¿Ú2(P4.6 P4.7)·¢ËÍ¸øÉÏÎ»»ú£¬²¨ÌØÂÊ115200,N,8,1.
   22          
   23          0~7Í¨µÀ¶ÔÓ¦P1.0~P1.7, 8~14Í¨µÀ¶ÔÓ¦P0.0~P0.6, 15Í¨µÀÎªÄÚ²¿1.19V»ù×¼µçÑ¹×öÊäÈëµÄADCÖµ.
   24          
   25          ³õÊ¼»¯Ê±ÏÈ°ÑÒªADC×ª»»µÄÒı½ÅÉèÖÃÎª¸ß×èÊäÈë.
   26          
   27          ÏÂÔØÊ±, Ñ¡ÔñÊ±ÖÓ 22.1184MHz (ÓÃ»§¿É×ÔĞĞĞŞ¸ÄÆµÂÊ).
   28          
   29          ******************************************/
   30          
   31          #include ".\comm\STC32G.h"
   32          #include "intrins.h"
   33          #include "stdio.h"
   34          
   35          typedef         unsigned char   u8;
   36          typedef         unsigned int    u16;
   37          typedef         unsigned long   u32;
   38          
   39          
   40          #define MAIN_Fosc     22118400L  //¶¨ÒåÖ÷Ê±ÖÓ
   41          #define Baudrate      115200L
   42          #define TM            (65536 -(MAIN_Fosc/Baudrate/4))
   43          
   44          
   45          /*************  ±¾µØ³£Á¿ÉùÃ÷    **************/
   46          
   47          #define ADC_SPEED       15              /* 0~15, ADC×ª»»Ê±¼ä(CPUÊ±ÖÓÊı) = (n+1)*32  ADCCFG */
   48          #define RES_FMT         (1<<5)  /* ADC½á¹û¸ñÊ½ 0: ×ó¶ÔÆë, ADC_RES: D11 D10 D9 D8 D7 D6 D5 D4, ADC_RESL: D3 D2 D1 
             -D0 0 0 0 0 */
   49                                                                  /* ADCCFG      1: ÓÒ¶ÔÆë, ADC_RES: 0 0 0 0 D11 D10 D9 D8, ADC_RESL: D7 D6 D5 D4 D3 D2 D1 D0 */
   50          
   51          /*************  ±¾µØ±äÁ¿ÉùÃ÷    **************/
   52          
   53          
   54          /*************  ±¾µØº¯ÊıÉùÃ÷    **************/
   55          
   56          void    delay_ms(u8 ms);
   57          void    ADC_convert(u8 chn);    //chn=0~7¶ÔÓ¦P1.0~P1.7, chn=8~14¶ÔÓ¦P0.0~P0.6, chn=15¶ÔÓ¦BandGapµçÑ¹
   58          u16     Get_ADC12bitResult(u8 channel);
C251 COMPILER V5.60.0,  main                                                               20/07/23  08:44:43  PAGE 2   

   59          
   60          /******************** ´®¿Ú´òÓ¡º¯Êı ********************/
   61          void UartInit(void)
   62          {
   63   1              S2_S = 1;       //UART2 switch to: 0: P1.0 P1.1,  1: P4.6 P4.7
   64   1          S2CFG |= 0x01;  //Ê¹ÓÃ´®¿Ú2Ê±£¬W1Î»±ØĞèÉèÖÃÎª1£¬·ñÔò¿ÉÄÜ»á²úÉú²»¿ÉÔ¤ÆÚµÄ´íÎó
   65   1              S2CON = (S2CON & 0x3f) | 0x40; 
   66   1              T2L  = TM;
   67   1              T2H  = TM>>8;
   68   1              AUXR |= 0x14;         //¶¨Ê±Æ÷2Ê±ÖÓ1TÄ£Ê½,¿ªÊ¼¼ÆÊ±
   69   1      }
   70          
   71          void UartPutc(unsigned char dat)
   72          {
   73   1              S2BUF  = dat; 
   74   1              while(S2TI == 0);
   75   1              S2TI = 0;    //Clear Tx flag
   76   1      }
   77          
   78          char putchar(char c)
   79          {
   80   1              UartPutc(c);
   81   1              return c;
   82   1      }
   83          
   84          /**********************************************/
   85          void main(void)
   86          {
   87   1              u8      i;
   88   1      
   89   1          WTST = 0;  //ÉèÖÃ³ÌĞòÖ¸ÁîÑÓÊ±²ÎÊı£¬¸³ÖµÎª0¿É½«CPUÖ´ĞĞÖ¸ÁîµÄËÙ¶ÈÉèÖÃÎª×î¿ì
   90   1          EAXFR = 1; //À©Õ¹¼Ä´æÆ÷(XFR)·ÃÎÊÊ¹ÄÜ
   91   1          CKCON = 0; //Ìá¸ß·ÃÎÊXRAMËÙ¶È
   92   1      
   93   1          P0M1 = 0x7f;   P0M0 = 0x00;   //ÉèÖÃÎª¸ß×èÊäÈë
   94   1          P1M1 = 0xfb;   P1M0 = 0x00;   //ÉèÖÃÎª¸ß×èÊäÈë
   95   1          P2M1 = 0x3c;   P2M0 = 0x3c;   //ÉèÖÃP2.2~P2.5ÎªÂ©¼«¿ªÂ·(ÊµÑéÏä¼ÓÁËÉÏÀ­µç×èµ½3.3V)
   96   1          P3M1 = 0x50;   P3M0 = 0x50;   //ÉèÖÃP3.4¡¢P3.6ÎªÂ©¼«¿ªÂ·(ÊµÑéÏä¼ÓÁËÉÏÀ­µç×èµ½3.3V)
   97   1          P4M1 = 0x3c;   P4M0 = 0x3c;   //ÉèÖÃP4.2~P4.5ÎªÂ©¼«¿ªÂ·(ÊµÑéÏä¼ÓÁËÉÏÀ­µç×èµ½3.3V)
   98   1          P5M1 = 0x1c;   P5M0 = 0x0c;   //ÉèÖÃP5.2¡¢P5.3ÎªÂ©¼«¿ªÂ·(ÊµÑéÏä¼ÓÁËÉÏÀ­µç×èµ½3.3V)£¬ÉèÖÃP5.4Îª¸ß×èÊäÈ
             -ë
   99   1          P6M1 = 0xff;   P6M0 = 0xff;   //ÉèÖÃÎªÂ©¼«¿ªÂ·(ÊµÑéÏä¼ÓÁËÉÏÀ­µç×èµ½3.3V)
  100   1          P7M1 = 0x00;   P7M0 = 0x00;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
  101   1      
  102   1              ADCTIM = 0x3f;  //ÉèÖÃÍ¨µÀÑ¡ÔñÊ±¼ä¡¢±£³ÖÊ±¼ä¡¢²ÉÑùÊ±¼ä
  103   1              ADCCFG = RES_FMT + ADC_SPEED;
  104   1              //ADCÄ£¿éµçÔ´´ò¿ªºó£¬ĞèµÈ´ı1ms£¬MCUÄÚ²¿ADCµçÔ´ÎÈ¶¨ºóÔÙ½øĞĞAD×ª»»
  105   1              ADC_CONTR = 0x80 + 0;   //ADC on + channel
  106   1      
  107   1              UartInit();
  108   1              EA = 1;
  109   1              printf("STC32GÏµÁĞADC²âÊÔ³ÌĞò!\r\n");
  110   1      
  111   1              while (1)
  112   1              {
  113   2                      for(i=0; i<16; i++)
  114   2                      {
  115   3                              delay_ms(200);
  116   3                              //ADC_convert(3);               //·¢ËÍ¹Ì¶¨Í¨µÀADÖµ
  117   3      
  118   3                              ADC_convert(i);         //·¢ËÍÂÖÑ¯Í¨µÀADÖµ
  119   3                              if((i & 7) == 7)        //·ÖÁ½ĞĞ´òÓ¡
  120   3                              {
  121   4                                      printf("\r\n");
  122   4                              }
  123   3                      }
C251 COMPILER V5.60.0,  main                                                               20/07/23  08:44:43  PAGE 3   

  124   2              }
  125   1      }
  126          
  127          
  128          //========================================================================
  129          // º¯Êı: u16 Get_ADC12bitResult(u8 channel))    //channel = 0~15
  130          // ÃèÊö: ²éÑ¯·¨¶ÁÒ»´ÎADC½á¹û.
  131          // ²ÎÊı: channel: Ñ¡ÔñÒª×ª»»µÄADC, 0~15.
  132          // ·µ»Ø: 12Î»ADC½á¹û.
  133          // °æ±¾: V1.0, 2016-4-28
  134          //========================================================================
  135          u16     Get_ADC12bitResult(u8 channel)  //channel = 0~15
  136          {
  137   1              ADC_RES = 0;
  138   1              ADC_RESL = 0;
  139   1      
  140   1          ADC_CONTR = (ADC_CONTR & 0xf0) | channel; //ÉèÖÃADC×ª»»Í¨µÀ
  141   1          ADC_START = 1;//Æô¶¯ADC×ª»»
  142   1          _nop_();
  143   1              _nop_();
  144   1              _nop_();
  145   1              _nop_();
  146   1          while(ADC_FLAG == 0);   //wait for ADC finish
  147   1          ADC_FLAG = 0;     //Çå³ıADC½áÊø±êÖ¾
  148   1              return (((u16)ADC_RES << 8) | ADC_RESL);
  149   1      }
  150          
  151          #define         SUM_LENGTH      16      /* Æ½¾ùÖµ²ÉÑù´ÎÊı ×î´óÖµ16 */
  152          
  153          /***********************************
  154          ²éÑ¯·½Ê½×öÒ»´ÎADC, chnÎªÍ¨µÀºÅ, chn=0~7¶ÔÓ¦P1.0~P1.7, chn=8~14¶ÔÓ¦P0.0~P0.6, chn=15¶ÔÓ¦BandGapµçÑ¹.
  155          ***********************************/
  156          void ADC_convert(u8 chn)
  157          {
  158   1              u16     j;
  159   1              u8      k;              //Æ½¾ùÖµÂË²¨Ê±Ê¹ÓÃ
  160   1      
  161   1              Get_ADC12bitResult(chn);                //²ÎÊıi=0~15,²éÑ¯·½Ê½×öÒ»´ÎADC, ÇĞ»»Í¨µÀºóµÚÒ»´Î×ª»»½á¹û¶ªÆú. ±ÜÃâ²ÉÑùµçÈİµÄ²Ğ
             -´æµçÑ¹Ó°Ïì.
  162   1              Get_ADC12bitResult(chn);                //²ÎÊıi=0~15,²éÑ¯·½Ê½×öÒ»´ÎADC, ÇĞ»»Í¨µÀºóµÚ¶ş´Î×ª»»½á¹û¶ªÆú. ±ÜÃâ²ÉÑùµçÈİµÄ²Ğ
             -´æµçÑ¹Ó°Ïì.
  163   1              for(k=0, j=0; k<SUM_LENGTH; k++)        j += Get_ADC12bitResult(chn);   // ²ÉÑùÀÛ¼ÓºÍ, ²ÎÊı0~15,²éÑ¯·½Ê½×öÒ»´ÎADC
             -, ·µ»ØÖµ¾ÍÊÇ½á¹û
  164   1              j = j / SUM_LENGTH;             // ÇóÆ½¾ù
  165   1      
  166   1              if(chn == 15)   printf("Bandgap=%04d  ",j);     //ÄÚ»ù×¼ 1.19V
  167   1              else            //ADC0~ADC14
  168   1              {
  169   2                      printf("ADC%02d=%04d  ",chn,j);
  170   2              }
  171   1      }
  172          
  173          //========================================================================
  174          // º¯Êı: void delay_ms(u8 ms)
  175          // ÃèÊö: ÑÓÊ±º¯Êı¡£
  176          // ²ÎÊı: ms,ÒªÑÓÊ±µÄmsÊı, ÕâÀïÖ»Ö§³Ö1~255ms. ×Ô¶¯ÊÊÓ¦Ö÷Ê±ÖÓ.
  177          // ·µ»Ø: none.
  178          // °æ±¾: VER1.0
  179          // ÈÕÆÚ: 2013-4-1
  180          // ±¸×¢: 
  181          //========================================================================
  182          void delay_ms(u8 ms)
  183          {
  184   1              u16 i;
  185   1              do
  186   1              {
C251 COMPILER V5.60.0,  main                                                               20/07/23  08:44:43  PAGE 4   

  187   2                      i = MAIN_Fosc / 6000;
  188   2                      while(--i);
  189   2              }while(--ms);
  190   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       343     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        58     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
