C251 COMPILER V5.60.0,  main                                                               20/07/23  10:46:47  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\OutPut\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE main.c XSMALL INTR2 BROWSE DEBUG PRINT(.\Listings\main.lst) OBJECT(.\O
                    -utPut\main.obj) 

stmt  level    source

    1          #include ".\comm\STC32G.h"
    2          #include "intrins.h"
    3          #include "stdio.h"
    4          
    5          typedef         unsigned char   u8;
    6          typedef         unsigned int    u16;
    7          typedef         unsigned long   u32;
    8          
    9          
   10          #define MAIN_Fosc     22118400L  //¶¨ÒåÖ÷Ê±ÖÓ
   11          #define Baudrate      115200L
   12          #define TM            (65536 -(MAIN_Fosc/Baudrate/4))
   13          #define Major_Ver      0
   14          #define Minor_Ver      1
   15          
   16          
   17          /*************  ±¾µØ³£Á¿ÉùÃ÷    **************/
   18          
   19          #define ADC_SPEED       15              /* 0~15, ADC×ª»»Ê±¼ä(CPUÊ±ÖÓÊı) = (n+1)*32  ADCCFG */
   20          #define RES_FMT         (1<<5)  /* ADC½á¹û¸ñÊ½ 0: ×ó¶ÔÆë, ADC_RES: D11 D10 D9 D8 D7 D6 D5 D4, ADC_RESL: D3 D2 D1 
             -D0 0 0 0 0 */
   21                                                                  /* ADCCFG      1: ÓÒ¶ÔÆë, ADC_RES: 0 0 0 0 D11 D10 D9 D8, ADC_RESL: D7 D6 D5 D4 D3 D2 D1 D0 */
   22          
   23          /*************  ±¾µØ±äÁ¿ÉùÃ÷    **************/
   24          
   25          
   26          /*************  ±¾µØº¯ÊıÉùÃ÷    **************/
   27          
   28          void    delay_ms(u8 ms);
   29          void    ADC_convert(u8 chn);    //chn=0~7¶ÔÓ¦P1.0~P1.7, chn=8~14¶ÔÓ¦P0.0~P0.6, chn=15¶ÔÓ¦BandGapµçÑ¹
   30          u16     Get_ADC12bitResult(u8 channel);
   31          
   32          /******************** ´®¿Ú´òÓ¡º¯Êı ********************/
   33          void UartInit(void)
   34          {
   35   1              S2_S = 1;       //UART2 switch to: 0: P1.0 P1.1,  1: P4.6 P4.7
   36   1          S2CFG |= 0x01;  //Ê¹ÓÃ´®¿Ú2Ê±£¬W1Î»±ØĞèÉèÖÃÎª1£¬·ñÔò¿ÉÄÜ»á²úÉú²»¿ÉÔ¤ÆÚµÄ´íÎó
   37   1              S2CON = (S2CON & 0x3f) | 0x40; 
   38   1              T2L  = TM;
   39   1              T2H  = TM>>8;
   40   1              AUXR |= 0x14;         //¶¨Ê±Æ÷2Ê±ÖÓ1TÄ£Ê½,¿ªÊ¼¼ÆÊ±
   41   1      }
   42          
   43          void UartPutc(unsigned char dat)
   44          {
   45   1              S2BUF  = dat; 
   46   1              while(S2TI == 0);
   47   1              S2TI = 0;    //Clear Tx flag
   48   1      }
   49          
   50          char putchar(char c)
   51          {
   52   1              UartPutc(c);
   53   1              return c;
   54   1      }
   55          
   56          /**********************************************/
   57          void main(void)
C251 COMPILER V5.60.0,  main                                                               20/07/23  10:46:47  PAGE 2   

   58          {
   59   1              u8      i;
   60   1      
   61   1          WTST = 0;  //ÉèÖÃ³ÌĞòÖ¸ÁîÑÓÊ±²ÎÊı£¬¸³ÖµÎª0¿É½«CPUÖ´ĞĞÖ¸ÁîµÄËÙ¶ÈÉèÖÃÎª×î¿ì
   62   1          EAXFR = 1; //À©Õ¹¼Ä´æÆ÷(XFR)·ÃÎÊÊ¹ÄÜ
   63   1          CKCON = 0; //Ìá¸ß·ÃÎÊXRAMËÙ¶È
   64   1      
   65   1          P0M1 = 0x7f;   P0M0 = 0x00;   //ÉèÖÃÎª¸ß×èÊäÈë
   66   1          P1M1 = 0xfb;   P1M0 = 0x00;   //ÉèÖÃÎª¸ß×èÊäÈë
   67   1          P2M1 = 0x3c;   P2M0 = 0x3c;   //ÉèÖÃP2.2~P2.5ÎªÂ©¼«¿ªÂ·(ÊµÑéÏä¼ÓÁËÉÏÀ­µç×èµ½3.3V)
   68   1          P3M1 = 0x50;   P3M0 = 0x50;   //ÉèÖÃP3.4¡¢P3.6ÎªÂ©¼«¿ªÂ·(ÊµÑéÏä¼ÓÁËÉÏÀ­µç×èµ½3.3V)
   69   1          P4M1 = 0x3c;   P4M0 = 0x3c;   //ÉèÖÃP4.2~P4.5ÎªÂ©¼«¿ªÂ·(ÊµÑéÏä¼ÓÁËÉÏÀ­µç×èµ½3.3V)
   70   1          P5M1 = 0x1c;   P5M0 = 0x0c;   //ÉèÖÃP5.2¡¢P5.3ÎªÂ©¼«¿ªÂ·(ÊµÑéÏä¼ÓÁËÉÏÀ­µç×èµ½3.3V)£¬ÉèÖÃP5.4Îª¸ß×èÊäÈ
             -ë
   71   1          P6M1 = 0xff;   P6M0 = 0xff;   //ÉèÖÃÎªÂ©¼«¿ªÂ·(ÊµÑéÏä¼ÓÁËÉÏÀ­µç×èµ½3.3V)
   72   1          P7M1 = 0x00;   P7M0 = 0x00;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
   73   1      
   74   1              ADCTIM = 0x3f;  //ÉèÖÃÍ¨µÀÑ¡ÔñÊ±¼ä¡¢±£³ÖÊ±¼ä¡¢²ÉÑùÊ±¼ä
   75   1              ADCCFG = RES_FMT + ADC_SPEED;
   76   1              //ADCÄ£¿éµçÔ´´ò¿ªºó£¬ĞèµÈ´ı1ms£¬MCUÄÚ²¿ADCµçÔ´ÎÈ¶¨ºóÔÙ½øĞĞAD×ª»»
   77   1              ADC_CONTR = 0x80 + 0;   //ADC on + channel
   78   1      
   79   1              UartInit();
   80   1              EA = 1;
   81   1              printf("ÄÏ¶¼Æû³µµç×Ó×èÖµ¼ì²â£¬°æ±¾ºÅ£ºVer%02d.%02d!\r\n",Major_Ver,Minor_Ver);
   82   1      
   83   1              while (1)
   84   1              {
   85   2                      for(i=0; i<16; i++)
   86   2                      {
   87   3                              delay_ms(200);
   88   3                              //ADC_convert(3);               //·¢ËÍ¹Ì¶¨Í¨µÀADÖµ
   89   3      
   90   3                              ADC_convert(i);         //·¢ËÍÂÖÑ¯Í¨µÀADÖµ
   91   3                              if((i & 7) == 7)        //·ÖÁ½ĞĞ´òÓ¡
   92   3                              {
   93   4                                      printf("\r\n");
   94   4                              }
   95   3                      }
   96   2              }
   97   1      }
   98          
   99          
  100          //========================================================================
  101          // º¯Êı: u16 Get_ADC12bitResult(u8 channel))    //channel = 0~15
  102          // ÃèÊö: ²éÑ¯·¨¶ÁÒ»´ÎADC½á¹û.
  103          // ²ÎÊı: channel: Ñ¡ÔñÒª×ª»»µÄADC, 0~15.
  104          // ·µ»Ø: 12Î»ADC½á¹û.
  105          // °æ±¾: V1.0, 2016-4-28
  106          //========================================================================
  107          u16     Get_ADC12bitResult(u8 channel)  //channel = 0~15
  108          {
  109   1              ADC_RES = 0;
  110   1              ADC_RESL = 0;
  111   1      
  112   1          ADC_CONTR = (ADC_CONTR & 0xf0) | channel; //ÉèÖÃADC×ª»»Í¨µÀ
  113   1          ADC_START = 1;//Æô¶¯ADC×ª»»
  114   1          _nop_();
  115   1              _nop_();
  116   1              _nop_();
  117   1              _nop_();
  118   1          while(ADC_FLAG == 0);   //wait for ADC finish
  119   1          ADC_FLAG = 0;     //Çå³ıADC½áÊø±êÖ¾
  120   1              return (((u16)ADC_RES << 8) | ADC_RESL);
  121   1      }
  122          
C251 COMPILER V5.60.0,  main                                                               20/07/23  10:46:47  PAGE 3   

  123          #define         SUM_LENGTH      16      /* Æ½¾ùÖµ²ÉÑù´ÎÊı ×î´óÖµ16 */
  124          
  125          /***********************************
  126          ²éÑ¯·½Ê½×öÒ»´ÎADC, chnÎªÍ¨µÀºÅ, chn=0~7¶ÔÓ¦P1.0~P1.7, chn=8~14¶ÔÓ¦P0.0~P0.6, chn=15¶ÔÓ¦BandGapµçÑ¹.
  127          ***********************************/
  128          void ADC_convert(u8 chn)
  129          {
  130   1              u16     j;
  131   1              u8      k;              //Æ½¾ùÖµÂË²¨Ê±Ê¹ÓÃ
  132   1      
  133   1              Get_ADC12bitResult(chn);                //²ÎÊıi=0~15,²éÑ¯·½Ê½×öÒ»´ÎADC, ÇĞ»»Í¨µÀºóµÚÒ»´Î×ª»»½á¹û¶ªÆú. ±ÜÃâ²ÉÑùµçÈİµÄ²Ğ
             -´æµçÑ¹Ó°Ïì.
  134   1              Get_ADC12bitResult(chn);                //²ÎÊıi=0~15,²éÑ¯·½Ê½×öÒ»´ÎADC, ÇĞ»»Í¨µÀºóµÚ¶ş´Î×ª»»½á¹û¶ªÆú. ±ÜÃâ²ÉÑùµçÈİµÄ²Ğ
             -´æµçÑ¹Ó°Ïì.
  135   1              for(k=0, j=0; k<SUM_LENGTH; k++)        j += Get_ADC12bitResult(chn);   // ²ÉÑùÀÛ¼ÓºÍ, ²ÎÊı0~15,²éÑ¯·½Ê½×öÒ»´ÎADC
             -, ·µ»ØÖµ¾ÍÊÇ½á¹û
  136   1              j = j / SUM_LENGTH;             // ÇóÆ½¾ù
  137   1      
  138   1              if(chn == 15)   printf("Bandgap=%04d  ",j);     //ÄÚ»ù×¼ 1.19V
  139   1              else            //ADC0~ADC14
  140   1              {
  141   2                      printf("ADC%02d=%04d  ",chn,j);
  142   2              }
  143   1      }
  144          
  145          //========================================================================
  146          // º¯Êı: void delay_ms(u8 ms)
  147          // ÃèÊö: ÑÓÊ±º¯Êı¡£
  148          // ²ÎÊı: ms,ÒªÑÓÊ±µÄmsÊı, ÕâÀïÖ»Ö§³Ö1~255ms. ×Ô¶¯ÊÊÓ¦Ö÷Ê±ÖÓ.
  149          // ·µ»Ø: none.
  150          // °æ±¾: VER1.0
  151          // ÈÕÆÚ: 2013-4-1
  152          // ±¸×¢: 
  153          //========================================================================
  154          void delay_ms(u8 ms)
  155          {
  156   1              u16 i;
  157   1              do
  158   1              {
  159   2                      i = MAIN_Fosc / 6000;
  160   2                      while(--i);
  161   2              }while(--ms);
  162   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       357     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        79     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
